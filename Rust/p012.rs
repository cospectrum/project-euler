/*
The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
    1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
Let us list the factors of the first seven triangle numbers:
     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/

fn main() {
    const N: usize = 500;
    let answer = triangle_number_with_divs_over(N);
    println!("{}", answer);
}

fn triangle_number_with_divs_over(over: usize) -> u64 {
    let mut position = 0;
    loop {
        position += 1;
        let tr_num = triangle_number_by_position(position);
        if get_factors(tr_num).len() > over {
            return tr_num;
        }
    }
}

fn get_factors(number: u64) -> Vec<u64> {
    let mut factors = vec![];
    let mut m = 1;
    while m * m < number {
        if number % m == 0 {
            factors.push(m);
            factors.push(number / m);
        }
        m += 1;
    }
    if m * m == number {
        factors.push(m)
    }
    factors
}

fn triangle_number_by_position(position: u64) -> u64 {
    // 1 + 2 + ... + position
    (position * (position + 1)) / 2
}
