"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four
million, find the sum of the even-valued terms.
"""


def fib_numbers_iterator():
    first = 0
    second = 1
    
    while True:
        fib_number = first + second
        yield fib_number

        first = second
        second = fib_number


def get_slice_by(*, bound: int, iterator):
    number = next(iterator)
    while number <= bound:
        yield number
        number = next(iterator)


def sum_even_fib_numbers(bound: int):
    iterator = fib_numbers_iterator()
    result = sum(
        num for num in get_slice_by(bound=bound, iterator=iterator)
        if num % 2 == 0
    )
    return result


if __name__ == '__main__':
    n = 4 * 10**6
    answer = sum_even_fib_numbers(n)
    print(answer)

